package com.amxmobile.SixBookmarks;

import net.rim.device.api.ui.Field;
import net.rim.device.api.ui.FieldChangeListener;
import net.rim.device.api.ui.component.ButtonField;
import net.rim.device.api.ui.component.CheckboxField;
import net.rim.device.api.ui.component.EditField;
import net.rim.device.api.ui.component.LabelField;
import net.rim.device.api.ui.component.PasswordEditField;
import net.rim.device.api.ui.container.MainScreen;

import com.amxmobile.SixBookmarks.Data.Bookmark;
import com.amxmobile.SixBookmarks.Database.DatabaseHelper;
import com.amxmobile.SixBookmarks.Database.SqlFilter;
import com.amxmobile.SixBookmarks.Database.Sync;
import com.amxmobile.SixBookmarks.Runtime.ErrorBucket;
import com.amxmobile.SixBookmarks.Runtime.MessageBox;
import com.amxmobile.SixBookmarks.Runtime.SixBookmarksRuntime;
import com.amxmobile.SixBookmarks.Services.LogonResponse;
import com.amxmobile.SixBookmarks.Services.UsersService;

public class LogonForm extends MainScreen implements FieldChangeListener
{
	private EditField _usernameTextBox;
	private PasswordEditField _passwordTextBox;
	private CheckboxField _rememberMeCheckBox;
	private ButtonField _logonButton;

	public LogonForm()
	{
		super();
		
		// start...
		SixBookmarksRuntime.Start();
		
		// DEBUG - remove all this...
		DatabaseHelper.setUser("martha");
		try
		{
			SqlFilter filter = new SqlFilter(Bookmark.class);
			filter.ExecuteEntityCollection();
			filter.ExecuteEntityCollection();
		}
		catch(Exception ex)
		{
			MessageBox.Show(ex);
		}
		
		// title...
		setTitle(new LabelField("Welcome to Six Bookmarks"));
		
		// controls...
		this.add(new LabelField("Username"));
		_usernameTextBox = new EditField();
		this.add(_usernameTextBox);
		
		this.add(new LabelField("Password"));
		_passwordTextBox = new PasswordEditField();
		this.add(_passwordTextBox);
		
		_rememberMeCheckBox = new CheckboxField("Remember me", true);
		this.add(_rememberMeCheckBox);
		
		_logonButton = new ButtonField("Logon", ButtonField.CONSUME_CLICK);
		_logonButton.setChangeListener(this);
		this.add(_logonButton);
	}

	public void fieldChanged(Field field, int context)
	{
		try
		{
			if(field == _logonButton)
				HandleLogon();
		}
		catch(Exception ex)
		{
			MessageBox.Show(ex);
		}
	}

	private void HandleLogon() throws Exception
	{
		ErrorBucket bucket = new ErrorBucket();
		String username = _usernameTextBox.getText().trim();
		if(username == null || username.length() == 0)
			bucket.AddError("Username not specified");
		String password = _passwordTextBox.getText();
		if(password == null || password.length() == 0)
			bucket.AddError("Password not specified");
		
		// errors?
		if(!(bucket.getHasErrors()))
			DoLogon(username, password, _rememberMeCheckBox.getChecked());
		else
			MessageBox.Show(bucket.GetAllErrors());
	}

	private void DoLogon(String username, String password, boolean rememberMe) throws Exception
	{
		UsersService users = new UsersService();
		LogonResponse response = users.Logon(username, password);
		
		// now what?
		if(response.getResult() == LogonResponse.RESULT_OK)
		{			
			// store the credentials?
			if(rememberMe)
				StoreCredentials(username, password);
			else
				ClearCredentials();
			
			// set the user...
			DatabaseHelper.setUser(username);
			
			// do a sync...
			Sync sync = new Sync();
			sync.DoSync(this);
			
			// create an intent and show the navigator...
			MessageBox.Show("Now what?");
		}
		else
		{
			MessageBox.Show(response.getMessage());
		}
	}

	private void ClearCredentials()
	{
		// TODO Auto-generated method stub
		
	}

	private void StoreCredentials(String username, String password)
	{
		// TODO Auto-generated method stub
		
	}
}
